import java.io.*;
import java.util.*;

public class User {
    private String username;
    private List<Expense> expenses;
    private static final Scanner scanner = new Scanner(System.in);

    
    public User(String username) {
        this.username = username;
        this.expenses = new ArrayList<>();
    }

    
    public void addExpense() {
        System.out.print("Enter description: ");
        String description = scanner.nextLine();
        System.out.print("Enter amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter category: ");
        String category = scanner.nextLine();

        Expense expense = new Expense(description, amount, category);
        expenses.add(expense);
        System.out.println("Expense added successfully!");
    }

    
    public void viewExpenses() {
        if (expenses.isEmpty()) {
            System.out.println("No expenses recorded.");
            return;
        }
        System.out.println("Expenses:");
        for (int i = 0; i < expenses.size(); i++) {
            System.out.println((i + 1) + ". " + expenses.get(i));
        }
    }

    
    public void editExpense() {
        System.out.print("Enter the expense number to edit: ");
        int index = scanner.nextInt() - 1;
        scanner.nextLine(); // Consume newline

        if (index < 0 || index >= expenses.size()) {
            System.out.println("Invalid expense number.");
            return;
        }

        Expense expense = expenses.get(index);
        System.out.println("Editing expense: " + expense);

        System.out.print("Enter new description (leave blank to keep): ");
        String description = scanner.nextLine();
        if (!description.isEmpty()) expense = new Expense(description, expense.getAmount(), expense.getCategory());

        System.out.print("Enter new amount (leave blank to keep): ");
        String amountInput = scanner.nextLine();
        if (!amountInput.isEmpty()) expense = new Expense(expense.getDescription(), Double.parseDouble(amountInput), expense.getCategory());

        System.out.print("Enter new category (leave blank to keep): ");
        String category = scanner.nextLine();
        if (!category.isEmpty()) expense = new Expense(expense.getDescription(), expense.getAmount(), category);

        expenses.set(index, expense);
        System.out.println("Expense updated!");
    }

    
    public void deleteExpense() {
        System.out.print("Enter the expense number to delete: ");
        int index = scanner.nextInt() - 1;
        scanner.nextLine(); // Consume newline

        if (index < 0 || index >= expenses.size()) {
            System.out.println("Invalid expense number.");
            return;
        }

        expenses.remove(index);
        System.out.println("Expense deleted!");
    }

    
    public void generateReport() {
        if (expenses.isEmpty()) {
            System.out.println("No expenses to report.");
            return;
        }

        double total = 0;
        System.out.println("\nExpense Report:");
        for (Expense expense : expenses) {
            System.out.println(expense);
            total += expense.getAmount();
        }
        System.out.println("Total spending: $" + total);
    }

  
    public void saveData() {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(username + "_expenses.dat"))) {
            out.writeObject(expenses);
            System.out.println("Data saved successfully.");
        } catch (IOException e) {
            System.out.println("Error saving data: " + e.getMessage());
        }
    }

    
    public void loadData() {
        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(username + "_expenses.dat"))) {
            expenses = (List<Expense>) in.readObject();
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("No previous data found.");
        }
    }
}
